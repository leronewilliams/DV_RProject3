{
    "contents" : "require(\"tidyr\")\nrequire(\"dplyr\")\nrequire(\"jsonlite\")\n\n#From class Website:\ncategoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query=\"select * from emp\"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_uteid', PASS='orcl_uteid', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))\n\n\nq='Good'\nr <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query=\"select * from diamonds where \\\\\\\"cut\\\\\\\" = \\\\\\'\"q\"\\\\\\'\"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', q=q),verbose = TRUE)))\n\nmyplot <- function(df, x) {\n  names(df) <- c(\"x\", \"n\")\n  ggplot(df, aes(x=x, y=n)) + geom_point()\n}\n\ncategoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query=\"select * from diamonds\"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Diamonds', PASS='orcl', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))\n\nddf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query=\"select * from DIAMONDS\"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON'),verbose = TRUE)));\n\nl <- list()\nfor (i in names(ddf)) { \n  if (i %in% categoricals[[1]]) {\n    r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query=\"select \\\\\\\"\"i\"\\\\\\\", count(*) n from DIAMONDS group by \\\\\\\"\"i\"\\\\\\\" \"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i=i),verbose = TRUE)))\n    p <- myplot(r,i)\n    print(p) \n    l[[i]] <- p\n  }\n}\n\npng(\"/Users/pcannata/Mine/UT/GitRepositories/DataVisualization/RWorkshop/00 Doc/categoricals.png\", width = 25, height = 10, units = \"in\", res = 72)\ngrid.newpage()\npushViewport(viewport(layout = grid.layout(1, 12)))   \n\nprint(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:4))\nprint(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 5:8))\nprint(l[[3]], vp = viewport(layout.pos.row = 1, layout.pos.col = 9:12))\n\ndev.off()\n\n\nmyplot1 <- function(df, x) {\n  names(df) <- c(\"x\")\n  ggplot(df, aes(x=x)) + geom_histogram()\n}\nl <- list()\nfor (i in names(ddf)) {   \n  # For details on [[...]] below, see http://stackoverflow.com/questions/1169456/in-r-what-is-the-difference-between-the-and-notations-for-accessing-the\n  if (i %in% categoricals[[2]]) {\n    r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query=\"select \\\\\\\"\"i\"\\\\\\\" from diamonds where \\\\\\\"\"i\"\\\\\\\" is not null \"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i=i),verbose = TRUE)))\n    p <- myplot1(r,i)\n    print(p) \n    l[[i]] <- p\n  }\n}\n\npng(\"/Users/pcannata/Mine/UT/GitRepositories/DataVisualization/RWorkshop/00 Doc/categoricals2.png\", width = 25, height = 20, units = \"in\", res = 72)\ngrid.newpage()\npushViewport(viewport(layout = grid.layout(2, 12)))   \n\nprint(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:3))\nprint(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 4:6))\nprint(l[[3]], vp = viewport(layout.pos.row = 1, layout.pos.col = 7:9))\nprint(l[[4]], vp = viewport(layout.pos.row = 1, layout.pos.col = 10:12))\nprint(l[[5]], vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\nprint(l[[6]], vp = viewport(layout.pos.row = 2, layout.pos.col = 4:6))\nprint(l[[7]], vp = viewport(layout.pos.row = 2, layout.pos.col = 7:9))\nprint(l[[8]], vp = viewport(layout.pos.row = 2, layout.pos.col = 10:12))\n\ndev.off()",
    "created" : 1425414387986.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2783115727",
    "id" : "9701CF62",
    "lastKnownWriteTime" : 1425414856,
    "path" : "~/GitHub/DV_RProject3/DV_RProject3/03 Visualizations/PNG.R",
    "project_path" : "03 Visualizations/PNG.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}